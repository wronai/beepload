# Caddyfile - Ultimate Auth Separation

# Global settings
{
    # Auto HTTPS configuration
    email admin@example.com
    acme_ca https://acme-v02.api.letsencrypt.org/directory
}

# ============ PUBLIC UPLOAD (NO AUTH) ============
{$FRONTEND_DOMAIN:upload.localhost} {
    # Redirect HTTP to HTTPS
    redir https://{$FRONTEND_DOMAIN}{uri}
}

https://{$FRONTEND_DOMAIN} {
    reverse_proxy frontend:3000
    
    # Enable large file uploads
    request_body {
        max_size 100MB
    }
}

# ============ API ENDPOINTS WITH SELECTIVE AUTH ============
{$API_DOMAIN:api.localhost} {
    # PUBLIC upload endpoint - no auth required
    route /uploads {
        reverse_proxy upload-service:3000
        request_body {
            max_size 100MB
        }
    }
    
    # PUBLIC file download - no auth required  
    route /files/* {
        reverse_proxy upload-service:3000
    }
    
    # MANAGER endpoints - require manager auth
    route /approval/* {
        forward_auth auth-service:3000 {
            uri /verify-manager
            copy_headers X-User-ID X-User-Email X-User-Roles X-Manager-ID
        }
        reverse_proxy approval-service:8080
    }
    
    # ADMIN config endpoints - require admin auth
    route /config/* {
        forward_auth auth-service:3000 {
            uri /verify-admin
            copy_headers X-User-ID X-User-Email X-User-Roles X-Admin-ID
        }
        reverse_proxy config-service:8000
    }
    
    # Internal notification service - no external access
    route /notifications/* {
        respond "Not Found" 404
    }
}

# ============ MANAGER DASHBOARD (AUTH REQUIRED) ============
{$MANAGER_DOMAIN:manager.localhost} {
    # Redirect HTTP to HTTPS
    redir https://{$MANAGER_DOMAIN}{uri}
}

https://{$MANAGER_DOMAIN} {
    forward_auth auth-service:3000 {
        uri /verify-manager
        copy_headers X-User-ID X-User-Email X-User-Roles
    }
    reverse_proxy manager-frontend:3000
}

# ============ ADMIN PANEL (ADMIN AUTH REQUIRED) ============
{$ADMIN_DOMAIN:admin.localhost} {
    # Redirect HTTP to HTTPS
    redir https://{$ADMIN_DOMAIN}{uri}
}

https://{$ADMIN_DOMAIN} {
    forward_auth auth-service:3000 {
        uri /verify-admin
        copy_headers X-User-ID X-User-Email X-User-Roles
    }
    reverse_proxy admin-frontend:3000
}

# ============ AUTH SERVICE ============
{$AUTH_DOMAIN:auth.localhost} {
    # Redirect HTTP to HTTPS
    redir https://{$AUTH_DOMAIN}{uri}
}

https://{$AUTH_DOMAIN} {
    reverse_proxy auth-service:3000 {
        # Forward headers for JWT validation
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
        header_up X-Forwarded-Uri {uri}
    }
}

# ============ WEBDAV STORAGE (PROTECTED) ============
{$WEBDAV_DOMAIN:files.localhost} {
    # Redirect HTTP to HTTPS
    redir https://{$WEBDAV_DOMAIN}{uri}
}

https://{$WEBDAV_DOMAIN} {
    forward_auth auth-service:3000 {
        uri /verify-manager
        copy_headers X-User-ID X-User-Email X-User-Roles
    }
    
    # WebDAV configuration
    root * /storage
    file_server browse
    
    # Enable WebDAV methods
    @dav_methods method PUT DELETE MKCOL COPY MOVE
    handle @dav_methods {
        reverse_proxy webdav:80
    }
}
